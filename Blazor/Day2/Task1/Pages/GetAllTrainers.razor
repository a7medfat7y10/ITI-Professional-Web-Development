@page "/AllTrainers"
@using Task1.Repos;

<h3>GetAllEmployee</h3>

@code {

    async Task Delete(int id)
    {
        Trainee toDelete = await TraineeRepo.GetTraineeDetails(id);
        await TraineeRepo.DeleteTrainee(toDelete.ID!);
        traineeLst =await TraineeRepo.GetAllTrainees();
    }

    public IEnumerable<Trainee> traineeLst { get; set; }

    [Inject]

    public ITraineeService TraineeRepo { get; set; }

    protected override async Task OnInitializedAsync()
    {
        traineeLst =await TraineeRepo.GetAllTrainees();
    }
}
@if (traineeLst.Count()==0)
{
    <p>Loading....</p>
}
else{
    <table class="table">
        <tr>
            <th> Trainer-ID </th>
            <th> Name </th>
            <th> Gender </th>
            <th> email </th>
            <th> MobileNo </th>
            <th> Birthdate </th>
            <th> IsGraduated </th>
            <th> track </th>
            <th>&nbsp;</th>
            <th>&nbsp;</th>
        </tr>

        @foreach (var item in traineeLst)
        {
            <tr>
                <td> @item.ID </td>
                <td> @item.Name </td>
                <td> @item.Sex.ToString() </td>
                <td> @item.Email </td>
                <td> @item.MobileNo </td>
                <td> @item.Birthdate </td>
                <td> @item.IsGraduated </td>
                <td> @item.trackId </td>
                <td> <a href="@($"trainee/{item.ID}")" class="btn btn-outline-primary"> Details </a> </td>
                <td> <a href="@($"traineeEdit/{item.ID}")" class="btn btn-outline-primary"> Edit </a> </td>
                <td> <a @onclick="(e) => Delete(item.ID)" class="btn btn-outline-primary"> Delete </a> </td>
            </tr>
        }
    </table>
}